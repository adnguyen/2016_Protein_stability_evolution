plot(seq(25,70,1),fud(T=seq(25,70,1),slope= 0.192,Tm=45),pch=16,col="blue")
points(seq(25,70,1),fud(T=seq(25,70,1),slope= 0.216,Tm=45),pch=16,col="red")
plot(seq(25,70,1),fud(T=seq(25,70,1),slope= 0.192,Tm=45),pch=16,col="blue",ylab="Proportion non-denatured",xlab="Temperature")
points(seq(25,70,1),fud(T=seq(25,70,1),slope= 0.216,Tm=45),pch=16,col="red")
plot(seq(25,70,.1),fud(T=seq(25,70,.1),slope= 0.192,Tm=45),pch=16,col="blue",ylab="Proportion non-denatured",xlab="Temperature")
points(seq(25,70,.1),fud(T=seq(25,70,.1),slope= 0.216,Tm=45),pch=16,col="red")
plot(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3958177,Tm=44.7544257,slope=0.2156598),pch=16,col="blue",ylab="Proportion non-denatured",xlab="Temperature",ylim=c(.3,1))
points(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3704093,Tm=46.159662,slope=0.1923073),pch=16,col="red")
points(ten.dat$T,ten.dat$unfolding,pch=16,col="red",cex=2)
points(aph$T,aph$unfolding,pch=16,col="blue",cex=2)
legend(60,1,c("Pogonomyrmex barbatus","Aphaenogaster picea")font=2,pch=16,col=c("red","blue"))
legend(60,1,c("Pogonomyrmex barbatus","Aphaenogaster picea"),font=2,pch=16,col=c("red","blue"))
?legend
legend(60,1,c("Pogonomyrmex barbatus","Aphaenogaster picea"),text.font=2,pch=16,col=c("red","blue"))
legend(60,1,c("Pogonomyrmex barbatus","Aphaenogaster picea"),text.font=3,pch=16,col=c("red","blue"))
legend(55,1,c("Pogonomyrmex barbatus","Aphaenogaster picea"),text.font=3,pch=16,col=c("red","blue"))
plot(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3958177,Tm=44.7544257,slope=0.2156598),pch=16,col="blue",ylab="Proportion non-denatured",xlab="Temperature",ylim=c(.3,1))
points(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3704093,Tm=46.159662,slope=0.1923073),pch=16,col="red")
points(ten.dat$T,ten.dat$unfolding,pch=16,col="red",cex=2)
points(aph$T,aph$unfolding,pch=16,col="blue",cex=2)
legend(55,1,c("Pogonomyrmex barbatus","Aphaenogaster picea"),text.font=3,pch=16,col=c("red","blue"))
#abline(v=c(46.1596629,44.7544257),lty=c(1,3),lwd=3)
plot(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3452337,Tm=43.2788185,slope=0.2824321),pch=16,col="red",ylab="Proportion non-denatured",xlab="Temperature",ylim=c(.3,1))
points(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3704093,Tm=46.159662,slope=0.1923073),pch=16,col="black")
points(ten.dat$T,ten.dat$unfolding,pch=16,col="black",cex=2)
points(ty.dat$T,ty.dat$unfolding,pch=16,col="red",cex=2)
abline(v=c(46.1596629,43.2788185),lty=c(1,3),lwd=3)
legend(55,1,c("10 minute","20 minute"),pch=16,col=c("black","red"))
plot(seq(25,70,.1),fud(T=seq(25,70,.1),slope= 0.192,Tm=45),pch=16,col="blue",ylab="Proportion non-denatured",xlab="Temperature")
points(seq(25,70,.1),fud(T=seq(25,70,.1),slope= 0.216,Tm=45),pch=16,col="red")
legend(55,1,c("Pogonomyrmex barbatus","Aphaenogaster picea"),text.font=3,pch=16,col=c("red","blue"))
knitr::kable(round(rbind(unfold_10min,aph.fit),3))
knitr::kable(round(cbind(unfold_10min,aph.fit),3))
.192+.021
.37+.021
.396-.024
.192-.282
.192+.021
.282-.043
46.16-43.279
.021+.37
.021-.37
.345+.021
fud(T=seq(25,50,.1),Tm=45,slope=.2,min=.4)
sa<-fud(T=seq(25,50,.1),Tm=45,slope=.2,min=.4)
sa<-fud(T=seq(25,70,.1),Tm=45,slope=.2,min=.4)
T<-seq(25,70,.1)
plot(T,sa)
plot(T,sa,ylab="Poportion non-denatured",xlab="Temperature")
plot(T,sa,ylab="Poportion non-denatured",xlab="Temperature (C)",las=1)
sample(sa)
sample(sa,10)
com<-cbind(T,sa)
com<-cbind(T,sa);com
prop<-fud(T=seq(25,70,.1),Tm=45,slope=.2,min=.4)
T<-seq(25,70,.1)
com<-cbind(T,prop);com
com<-cbind(T,prop);head(com)
plot(T,sa,ylab="Poportion non-denatured",xlab="Temperature (C)",las=1)
sample(com,10)
?sample
com[sample(com,10),]
com[sample(com,size=10),]
com[sample(com,size=20),]
com[sample(com,size=20),]
unfold_10min<-nls.fit(ten.dat)
library(ggplot2)
library(tidyr)
library(minpack.lm)
unfold_10min<-nls.fit(ten.dat)
unfold_10min
n<-com[sample(com,size=20),]+rnorm(mean=0,sd=0.02086242)
rnorm(mean=0,sd=0.02086242)
n<-com[sample(com,size=20),]+rnorm(mean=0,sd=0.02086242,n=1000)
n<-com[sample(com,size=20)+rnorm(mean=0,sd=0.02086242,n=10),]
n
sample(com,size=20)+rnorm(mean=0,sd=0.02086242,n=10)
sample(com,size=20)+rnorm(mean=0,sd=0.02086242,n=10)
n[,2]+rnorm(mean=0,sd=0.02086242,n=10)
n[,2]
n<-com[sample(com,size=20),]
n
n[,2]+rnorm(mean=0,sd=0.02086242,n=10)
str(n)
n<-as.data.frame(com[sample(com,size=20),])
n[,2]+rnorm(mean=0,sd=0.02086242,n=10)
n
n[,2]
n<-as.data.frame(com[sample(com,size=20),])
n
n[,2]
n[,2]+rnorm(mean=0,sd=0.02086242,n=10)
n$prop<-n[,2]+rnorm(mean=0,sd=0.02086242,n=10)
plot(n$T,n$prop)
rnorm(mean=0,sd=0.02086242,n=10)
n<-as.data.frame(com[sample(com,size=20),])# randomly sampling
n$prop<-n[,2]+rnorm(mean=0,sd=0.02086242,n=10)# adding error
plot(n$T,n$prop)
prop<-fud(T=seq(25,70,.1),Tm=45,slope=.2,min=.4)
T<-seq(25,70,.1)
com<-cbind(T,prop);head(com)
plot(T,sa,ylab="Poportion non-denatured",xlab="Temperature (C)",las=1)
n<-as.data.frame(com[sample(com,size=20),])# randomly sampling
n$prop<-n[,2]+rnorm(mean=0,sd=0.02086242,n=10)# adding error
plot(n$T,n$prop)
n<-as.data.frame(com[sample(com,size=20),])# randomly sampling
n$prop<-n[,2]+rnorm(mean=0,sd=0.02086242,n=10)# adding error
sample(com,size=20)
n<-as.data.frame(com[sample(com,size=20),])# randomly sampling
n$prop<-n[,2]+rnorm(mean=0,sd=0.02086242,n=10)# adding error
n
prop<-fud(T=seq(25,70,1),Tm=45,slope=.2,min=.4)
T<-seq(25,70,1)
com<-cbind(T,prop);head(com)
plot(T,sa,ylab="Poportion non-denatured",xlab="Temperature (C)",las=1)
plot(T,com,ylab="Poportion non-denatured",xlab="Temperature (C)",las=1)
plot(T,prop,ylab="Poportion non-denatured",xlab="Temperature (C)",las=1)
n<-as.data.frame(com[sample(com,size=20),])# randomly sampling
com<-cbind(T,prop);head(com)
com
n<-as.data.frame(com[sample(com,size=20),])# randomly sampling
sample(com,size=20)
com[sample(com,size=20),]
n<-as.data.frame(com[sample(com,size=20)])# randomly sampling
n
n<-as.data.frame(com[sample(com,size=20),])# randomly sampling
n<-as.data.frame(com[sample(com,size=10),])# randomly sampling
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n
n$prop<-n[,2]+rnorm(mean=0,sd=0.02086242,n=10)# adding error
plot(n$T,n$prop)
nls.fit(n)
unfolding<-fud(T=seq(25,70,1),Tm=45,slope=.2,min=.4)
T<-seq(25,70,1)
com<-cbind(T,unfolding);head(com)
plot(T,prop,ylab="Poportion non-denatured",xlab="Temperature (C)",las=1)
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n$prop<-n[,2]+rnorm(mean=0,sd=0.02086242,n=10)# adding error
plot(n$T,n$prop)
nls.fit(n)
plot(n$T,n$prop,pch=16,col="black")
plot(n$T,n$prop,pch=16,col="black",cex=2)
lines(T,prop)
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n$prop<-n[,2]+rnorm(mean=0,sd=0.02086242,n=10)# adding error
plot(n$T,n$prop,pch=16,col="black",cex=2)
lines(T,prop)
nls.fit(n)
plot(n$T,n$prop,pch=16,col="black",cex=2)
lines(T,prop)
nls.fit(n)
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n$prop<-n[,2]+rnorm(mean=0,sd=0.02086242,n=10)# adding error
plot(n$T,n$prop,pch=16,col="black",cex=2)
lines(T,prop)
nls.fit(n)
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n$prop<-n[,2]+rnorm(mean=0,sd=0.02086242,n=10)# adding error
plot(n$T,n$prop,pch=16,col="black",cex=2)
lines(T,prop)
nls.fit(n)
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n$prop<-n[,2]+rnorm(mean=0,sd=0.02086242,n=10)# adding error
plot(n$T,n$prop,pch=16,col="black",cex=2)
lines(T,prop)
nls.fit(n)
plot(n$T,n$prop,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,prop)
nls.fit(n)
plot(n$T,n$prop,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,prop)
nls.fit(n)
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n$prop<-n[,2]+rnorm(mean=0,sd=0.2,n=10)# adding error
plot(n$T,n$prop,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,prop)
nls.fit(n)
n
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$prop,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,prop)
nls.fit(n)
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$prop,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
nls.fit(n)
unfolding<-fud(T=seq(25,70,1),Tm=45,slope=.2,min=.4)
lines(T,unfolding)
T
unfolding
unfolding<-fud(T=seq(25,70,1),Tm=45,slope=.2,min=.4)
unfolding
T
plot(n$T,n$prop,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
nls.fit(n)
T
n$T
plot(n$T,n$prop,pch=16,col="black",cex=2,ylim=c(.4,1))
str(n)
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
nls.fit(n)
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
nls.fit(n)
knitr::kable(nls.fit(n))
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
knitr::kable(nls.fit(tt))
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
knitr::kable(tt)
library(spatstat)
tt
nndist(n$T)
mean(nndist(n$T))
sd(nndist(n$T))
mean(nndist(n$T))
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
knitr::kable(tt)
mean(nndist(n$T))
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
knitr::kable(tt)
mean(nndist(n$T))
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
knitr::kable(tt)
mean(nndist(n$T))
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
knitr::kable(tt)
mean(nndist(n$T))
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
knitr::kable(tt)
mean(nndist(n$T))
nndist(n$T,k=1:3)
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
knitr::kable(tt)
mean(nndist(n$T,k=1:3))
nndist(n$T,k=1:3)
lines(n$T,n$unfolding)
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
lines(n$T,n$unfolding)
n
sort(n)
sort(n$T)
n<-n[sort(n$T),]
n
sort(n$T)
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
sort(n$T)
n<-n[sort(n$T),]
n
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n[sort(n$T),]
[,sort(n$T)]
n[,sort(n$T)]
n[order(n$T),]
n<-n[order(n$T),]
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
lines(n$T,n$unfolding)
tt<-nls.fit(n)
knitr::kable(tt)
tt[2]
tt
lines(seq(25,70,.1),fud(Tm=tt[2],slope=tt[1],min=tt[3],T=seq(25,70,.1)))
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
lines(seq(25,70,.1),fud(Tm=tt[2],slope=tt[1],min=tt[3],T=seq(25,70,.1)),col="red")
knitr::kable(tt)
mean(nndist(n$T))
lines(seq(25,70,.1),fud(Tm=tt[2],slope=tt[1],min=tt[3],T=seq(25,70,.1)),col="red",lwd=2)
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
lines(seq(25,70,.1),fud(Tm=tt[2],slope=tt[1],min=tt[3],T=seq(25,70,.1)),col="red",lwd=2)
knitr::kable(tt)
legend(50,1,c("Known curve","Modeled curve based on points",col=c("black","red")))
lines(seq(25,70,.1),fud(Tm=tt[2],slope=tt[1],min=tt[3],T=seq(25,70,.1)),col="red",lwd=2)
legend(50,1,c("Known curve","Modeled curve based on points",col=c("black","red"),pch="-"))
knitr::kable(tt)
legend(50,1,c("Known curve","Modeled curve based on points",col=c("black","red"),pch=c("-")))
legend(50,1,c("Known curve","Modeled curve based on points",col=c("black","red"),pch=c(16,16)))
legend(50,1,c("Known curve","Modeled curve based on points",col=c("black","red"),pch=16))
legend(50,1,c("10 minute","20 minute"),pch=16,col=c("black","red"))
legend(50,1,c("Known curve","Modeled based on points"),pch=16,col=c("black","red"))
legend(50,1,c("Known curve","Modeled based on points"),pch="-",col=c("black","red"))
legend(50,1,c("Known curve","Modeled based on points"),pch="-",col=c("black","red"),cex=2)
legend(45,1,c("Known curve","Modeled based on points"),pch="-",col=c("black","red"),cex=2)
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n<-n[order(n$T),]
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
lines(seq(25,70,.1),fud(Tm=tt[2],slope=tt[1],min=tt[3],T=seq(25,70,.1)),col="red",lwd=2)
legend(45,1,c("Known curve","Modeled based on points"),pch="-",col=c("black","red"),cex=2)
knitr::kable(tt)
#mean(nndist(n$T))
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n<-n[order(n$T),]
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
lines(seq(25,70,.1),fud(Tm=tt[2],slope=tt[1],min=tt[3],T=seq(25,70,.1)),col="red",lwd=2)
legend(45,1,c("Known curve","Modeled based on points"),pch="-",col=c("black","red"),cex=1.5)
knitr::kable(tt)
#mean(nndist(n$T))
#try nearest neighbor
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n<-n[order(n$T),]
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
lines(seq(25,70,.1),fud(Tm=tt[2],slope=tt[1],min=tt[3],T=seq(25,70,.1)),col="red",lwd=2)
legend(45,1,c("Known curve","Modeled based on points"),pch="-",col=c("black","red"),cex=1.5)
knitr::kable(tt)
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n<-n[order(n$T),]
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
lines(seq(25,70,.1),fud(Tm=tt[2],slope=tt[1],min=tt[3],T=seq(25,70,.1)),col="red",lwd=2)
legend(45,1,c("Known curve","Modeled based on points"),pch="-",col=c("black","red"),cex=1.5)
knitr::kable(tt)
?legend
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n<-n[order(n$T),]
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
lines(seq(25,70,.1),fud(Tm=tt[2],slope=tt[1],min=tt[3],T=seq(25,70,.1)),col="red",lwd=2)
legend(45,1,c("Known curve","Modeled based on points"),pch="-",col=c("black","red"),cex=1.5)
knitr::kable(tt)
library(ggplot2)
library(tidyr)
library(minpack.lm)
unfolding<-fud(T=seq(25,70,1),Tm=45,slope=.2,min=.4)
T<-seq(25,70,1)
com<-cbind(T,unfolding);head(com)
plot(T,unfolding,ylab="Poportion non-denatured",xlab="Temperature (C)",las=1)
#sample random points
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n<-n[order(n$T),]
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
lines(seq(25,70,.1),fud(Tm=tt[2],slope=tt[1],min=tt[3],T=seq(25,70,.1)),col="red",lwd=2)
legend(45,1,c("Known curve","Modeled based on points"),pch="-",col=c("black","red"),cex=1.5)
knitr::kable(tt)
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n<-n[order(n$T),]
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
lines(seq(25,70,.1),fud(Tm=tt[2],slope=tt[1],min=tt[3],T=seq(25,70,.1)),col="red",lwd=2)
legend(45,1,c("Known curve","Modeled based on points"),pch="-",col=c("black","red"),cex=1.5)
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n<-n[order(n$T),]
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
lines(seq(25,70,.1),fud(Tm=tt[2],slope=tt[1],min=tt[3],T=seq(25,70,.1)),col="red",lwd=2)
legend(45,1,c("Known curve","Modeled based on points"),pch="-",col=c("black","red"),cex=1.5)
knitr::kable(tt)
tt
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n<-n[order(n$T),]
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
tt
lines(seq(25,70,.1),fud(Tm=tt[2],slope=tt[1],min=tt[3],T=seq(25,70,.1)),col="red",lwd=2)
legend(45,1,c("Known curve","Modeled based on points"),pch="-",col=c("black","red"),cex=1.5)
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n<-n[order(n$T),]
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
tt
lines(seq(25,70,.1),fud(Tm=tt[2],slope=tt[1],min=tt[3],T=seq(25,70,.1)),col="red",lwd=2)
legend(45,1,c("Known curve","Modeled based on points"),pch="-",col=c("black","red"),cex=1.5)
knitr::kable(tt)
n<-n[order(n$T),]
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
tt
lines(seq(25,70,.1),fud(Tm=tt[2],slope=tt[1],min=tt[3],T=seq(25,70,.1)),col="red",lwd=2)
legend(45,1,c("Known curve","Modeled based on points"),pch="-",col=c("black","red"),cex=1.5)
knitr::kable(tt)
n<-n[order(n$T),]
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
n<-n[order(n$T),]
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
n<-n[order(n$T),]
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
n<-n[order(n$T),]
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
tt
n<-n[order(n$T),]
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
n<-n[order(n$T),]
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n<-n[order(n$T),]
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
tt
n<-n[order(n$T),]
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n<-n[order(n$T),]
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
tt
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n<-n[order(n$T),]
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
tt
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n<-n[order(n$T),]
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
tt
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n<-n[order(n$T),]
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
tt
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n<-n[order(n$T),]
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
tt
lines(seq(25,70,.1),fud(Tm=tt[2],slope=tt[1],min=tt[3],T=seq(25,70,.1)),col="red",lwd=2)
legend(45,1,c("Known curve","Modeled based on points"),pch="-",col=c("black","red"),cex=1.5)
n<-as.data.frame(com[sample(nrow(com), 10), ])# randomly sampling
n<-n[order(n$T),]
n$unfolding<-n[,2]+rnorm(mean=0,sd=0.02,n=10)# adding error
plot(n$T,n$unfolding,pch=16,col="black",cex=2,ylim=c(.4,1))
lines(T,unfolding)
tt<-nls.fit(n)
tt
lines(seq(25,70,.1),fud(Tm=tt[2],slope=tt[1],min=tt[3],T=seq(25,70,.1)),col="red",lwd=2)
legend(45,1,c("Known curve","Modeled based on points"),pch="-",col=c("black","red"),cex=1.5)
knitr::kable(tt)
