list_predictions<-sapply(split(sub.param,list(sub.param$Accession)),function(x) {fud(T=seq(15,60,.1),Tm=x$Tm,slope=x$slope,min=x$min)})
sub.param<-subset(parameterss,parameterss$Tm < 40 )
str(sub.param);dim(sub.param)
hist(sub.param$Tm)
hist(sub.param$slope)
hist(sub.param$min)
cor_param<-princomp(sub.param[,1:3],scale=T)
cor_param
cor_param$loadings[,1:3]
#write.csv(t(param.fit),"param_fits.csv")
#param.p.values
param.p<-sapply(split(p2.long.sort,list(p2.long.sort$Accession)),function(x){summary(nlsLM(unfolding ~ min+ (1-min)/(1+exp((-slope*(Tm-T)))),data=x, start=list(slope=.5,Tm=37,min=.3), trace=TRUE,control=nls.control(warnOnly = TRUE, tol = 1e-05, maxiter=1000)))$parameters[,4]})
head(param.p)
param_p<-as.data.frame(cbind(t(param.p),row.names(t(param.p))))
str(sub.param)
#ddply(sub.param,.(Accession),summarize,function(x) fud(T=seq(15,60,.1),Tm=x$Tm,slope=x$slope,min=x$min))
list_predictions<-sapply(split(sub.param,list(sub.param$Accession)),function(x) {fud(T=seq(15,60,.1),Tm=x$Tm,slope=x$slope,min=x$min)})
split(sub.param,list(sub.param$Accession)
)
str(sub.param)
names(sub.param)[4]<-"Accession"
list_predictions<-sapply(split(sub.param,list(sub.param$Accession)),function(x) {fud(T=seq(15,60,.1),Tm=x$Tm,slope=x$slope,min=x$min)})
predi<-as.data.frame(do.call("rbind", list_predictions),stringAsFactors=FALSE)
predi$Accession<-sub.param$Accession
str(predi)
predi.long<-gather(predi,Accession,unfolding,V1:V451)
names(predi.long)[2]<-"Temp"
predi.long$Temp<-as.character(predi.long$Temp)
str(predi.long)
#library(stringer)
tmp<-unlist(strsplit(predi.long$Temp,split="V"))
length(na.omit(as.numeric(tmp)))
dim(predi.long)
predi.long$Tfac<-na.omit(as.numeric(tmp))
predi.long.sorted<-predi.long[order(predi.long$Accession),]
head(predi.long.sorted)
ddply(predi.long.sorted,.(Accession),summarize,k=length(Tfac))
predi.long.sorted$T<-rep(seq(15,60,.1),139)
ggplot(data=predi.long.sorted,aes(x=T,y=unfolding,colour=Accession))+geom_line()
p1$Accession<-as.factor(p1$Accession)
str(p1)
names(sub.param)[4]<-"Accession"
dim(sub.param)
library(dplyr)
Kinetics_estimates<-inner_join(sub.param,p1,by=c("Accession"))
dim(Kinetics_estimates)
DeltaG_3<-function(Cp=5,T=(seq(-60,60,.1)+273.15),Tm=35+273.15,slope=.3){
G<-(slope*Tm)*(1-(T/Tm))-(Cp*((Tm-T)+T*log(T/Tm)))
m<-cbind(seq(-60,60,.1),G)
return(max(m[,2]))
}
#cbind(seq(-60,60,.1),DeltaG_3())
mo<-lm(Tm~calc..pI,data=Kinetics_estimates)
summary(mo)
plot(Kinetics_estimates$calc..pI,Kinetics_estimates$Tm)
abline(summary(mo))
#CP estimates
((Kinetics_estimates$X..AAs*12)/1000)*(pi/180)
#ddply(Kinetics_estimates,.(Accession),summarize,function(x) DeltaG_3(Cp=(x$X..AAs*12)/1000,slope=x$slope,Tm=Tm))
Gibbs<-sapply(split(Kinetics_estimates,list(Kinetics_estimates$Accession)),function(x){DeltaG_3(Cp=(x$X..AAs*12)/1000*(pi/180),slope=x$slope,Tm=x$Tm)})
hist(Gibbs,20)
Gibbs<-sapply(split(Kinetics_estimates,list(Kinetics_estimates$Accession)),function(x){DeltaG_3(slope=x$slope,Tm=x$Tm)})
hist(Gibbs,20)
range(Gibbs)
Gibbs<-sapply(split(Kinetics_estimates,list(Kinetics_estimates$Accession)),function(x){DeltaG_3(Cp=0,slope=x$slope,Tm=x$Tm)})
hist(Gibbs,20)
range(Gibbs)
Gibbs<-sapply(split(Kinetics_estimates,list(Kinetics_estimates$Accession)),function(x){DeltaG_3(Cp=(x$X..AAs*12)/1000*(pi/180),slope=x$slope,Tm=x$Tm)})
hist(Gibbs,20)
fit1<-nls(unfolding ~ min+ (1-min)/(1+exp((-slope*(Tm-T)))),data=test, start=list(slope=.3,Tm=40,min=.2), trace=TRUE,control=nls.control(warnOnly = TRUE, tol = 1e-05, maxiter=1000))
summary(fit1)
plot(Temp,p1[38,3:11],pch=16,cex=3,ylim=c(0,1.3))
lines(seq(15,60,.1),fud(T=seq(15,60,.1),Tm=36.0947,slope=0.84522,min=0.31959),lwd=2,col="blue",lty="dotdash")
#tyring nlsLM
plot(Temp,p1[38,3:11],pch=16,cex=3)#row 38
plot(Temp,p1[38,3:11],pch=16,cex=3,ylim=c(0,1.3))
lines(seq(15,60,.1),fud(T=seq(15,60,.1),Tm=36.0947,slope=0.84522,min=0.31959),lwd=2,col="blue",lty="dotdash")
plot(Temp,p1[38,3:11],pch=16,cex=3,ylim=c(0,1.3))
lines(seq(15,60,.1),fud(T=seq(15,60,.1),Tm=36.0947,slope=0.84522,min=0.31959),lwd=2,col="blue",lty="dotdash",main="ATP synthase subunit f, mitochondrial")
head(p1)
p1[,38]
p1[38,]
plot(Temp,p1[38,3:11],pch=16,cex=3,ylim=c(0,1.3))
lines(seq(15,60,.1),fud(T=seq(15,60,.1),Tm=36.0947,slope=0.84522,min=0.31959),lwd=2,col="blue",lty="dotdash",main="ATP synthase subunit f, mitochondrial")
plot(Temp,p1[38,3:11],pch=16,cex=3,ylim=c(0,1.3))
lines(seq(15,60,.1),fud(T=seq(15,60,.1),Tm=36.0947,slope=0.84522,min=0.31959),lwd=2,col="blue",lty="dotdash",main="ATP synthase subunit f, mitochondrial",ylab="Fraction non-denatured")
plot(Temp,p1[38,3:11],pch=16,cex=3,ylim=c(0,1.3),main="ATP synthase subunit f, mitochondrial",ylab="Fraction non-denatured")
lines(seq(15,60,.1),fud(T=seq(15,60,.1),Tm=36.0947,slope=0.84522,min=0.31959),lwd=2,col="blue",lty="dotdash")
plot(Temp,p1[38,3:11],pch=16,cex=3)#row 38
plot(Temp,p1[1,3:11],pch=16,cex=3) # first row
plot(Temp,p1[1,3:11],pch=16,cex=3,main="Unknown protein",ylab="Fraction non-denatured") # first row
plot(Kinetics_estimates$calc..pI,Kinetics_estimates$Tm)
abline(summary(mo))
Gibbs<-sapply(split(Kinetics_estimates,list(Kinetics_estimates$Accession)),function(x){DeltaG_3(Cp=(x$X..AAs*12)/1000*(pi/180),slope=x$slope,Tm=x$Tm)})
hist(Gibbs,20)
hist(Gibbs,20,xlab="Gibbs free of unfolding")
range(Gibbs)
hist(sub.param$Tm)
hist(sub.param$slope)
hist(sub.param$Tm)
t<-read.csv("../Data/test.csv")
str(t)
nls.fit<-function(data=data){
y<-nlsLM(unfolding ~ min+ (1-min)/(1+exp((-slope*(Tm-T)))),data=data, start=list(slope=.5,Tm=40,min=.2), trace=TRUE,control=nls.control(warnOnly = TRUE, tol = 1e-05, maxiter=1000))
return(coef(y))
}
nls.fit<-function(data=data){
y<-nlsLM(unfolding ~ min+ (1-min)/(1+exp((-slope*(Tm-T)))),data=data, start=list(slope=.5,Tm=40,min=.2), trace=TRUE,control=nls.control(warnOnly = TRUE, tol = 1e-05, maxiter=1000))
return(coef(y))
}
library(ddply)
library(plyr)
str(t)
t<-read.csv("../Data/test.csv")
str(t)
ddply(t,.(Species),summarize,nls.fit)
ddply(t,.(Species),summarize,nls.fit())
library(minpack.lm)
ddply(t,.(Species),summarize,nls.fit())
ddply(t,.(Species,Colony),summarize,nls.fit())
str(t)
ddply(t,.(Species,Colony),summarize,nls.fit())
nls.fit<-function(data=data){
y<-nlsLM(unfolding ~ min+ (1-min)/(1+exp((-slope*(Tm-T)))),data=data, start=list(slope=.5,Tm=45,min=.3), trace=TRUE,control=nls.control(warnOnly = TRUE, tol = 1e-05, maxiter=1000))
return(coef(y))
}
ddply(t,.(Species,Colony),summarize,nls.fit())
m<-subset(t,t$Colony=="Avon")
nls.fit(Avon)
nls.fit(m)
fud<-function(T=seq(25,50,1),Tm=40,slope=.5,max=1,min=0){
y<-min+ (max-min)/(1+exp((-slope*(Tm-T))))
return(y)
}
plot(seq(25,50,1),fud(max=1,min=0),pch=15,col="black")
nls.fit(m)
ddply(t,.(Colony),summarize,nls.fit())
wwr<-subset(t,t$Colony=="WWRQ45")
nls.fit(wwr)
pb<-subset(t,t$Colony=="Pb17-10")
nls.fit(pb)
b<-subset(t,t$Colony=="Bingham")
nls.fit(b)
c(nls.fit(m),nls.fit(b),nls.fit(wwr),nls.fit(pb))
t(c(nls.fit(m),nls.fit(b),nls.fit(wwr),nls.fit(pb)))
buddy<-t(c(nls.fit(m),nls.fit(b),nls.fit(wwr),nls.fit(pb)))
buddy
buddy2<-cbind(buddy,c(rep("Avon",3),rep("Bing",3),rep("WWR",3),rep("PB",3))
)
c(rep("Avon",3),rep("Bing",3),rep("WWR",3),rep("PB",3))
length(c(rep("Avon",3),rep("Bing",3),rep("WWR",3),rep("PB",3)))
length(buddy)
buddy2<-cbind(buddy,c(rep("Avon",3),rep("Bing",3),rep("WWR",3),rep("PB",3)))
buddy2<-rbind(buddy,c(rep("Avon",3),rep("Bing",3),rep("WWR",3),rep("PB",3)))
buddy2
buddy2<-t(rbind(buddy,c(rep("Avon",3),rep("Bing",3),rep("WWR",3),rep("PB",3))))
buddy2
buddy2<-as.data.frame(t(rbind(buddy,c(rep("Avon",3),rep("Bing",3),rep("WWR",3),rep("PB",3)))),rownames=TRUE)
buddy2
buddy2<-as.data.frame(t(rbind(buddy,c(rep("Avon",3),rep("Bing",3),rep("WWR",3),rep("PB",3)))),)
buddy2
buddy2<-as.data.frame(t(rbind(buddy,c(rep("Avon",3),rep("Bing",3),rep("WWR",3),rep("PB",3)))))
buddy2
buddy2<-t(rbind(buddy,c(rep("Avon",3),rep("Bing",3),rep("WWR",3),rep("PB",3))))
class(buddy2)
buddy2
buddy2<-t(rbind(buddy,c(rep("Avon",3),rep("Bing",3),rep("WWR",3),rep("PB",3))),rep(c("slope","Tm","min",4)))
rep(c("slope","Tm","min",4)
)
buddy2<-t(rbind(buddy,c(rep("Avon",3),rep("Bing",3),rep("WWR",3),rep("PB",3))),rep(c("slope","Tm","min"),4))
rep(c("slope","Tm","min"),4)
param<-rep(c("slope","Tm","min"),4)
as.data.frame(buddy2)
buddy2<-rbind(buddy,c(rep("Avon",3),rep("Bing",3),rep("WWR",3),rep("PB",3)))
buddy2
buddy2<-cbind(buddy,c(rep("Avon",3),rep("Bing",3),rep("WWR",3),rep("PB",3)))
buddy2<-rbind(buddy,c(rep("Avon",3),rep("Bing",3),rep("WWR",3),rep("PB",3)))
buddy2
buddy2<-rbind(buddy,c(rep("Avon",3),rep("Bing",3),rep("WWR",3),rep("PB",3)),rep(c("slope","Tm","min"),4))
buddy2
buddy2<-t(rbind(buddy,c(rep("Avon",3),rep("Bing",3),rep("WWR",3),rep("PB",3)),rep(c("slope","Tm","min"),4)))
buddy2
buddy2<-as.data.frame(t(rbind(buddy,c(rep("Avon",3),rep("Bing",3),rep("WWR",3),rep("PB",3)),rep(c("slope","Tm","min"),4))))
buddy2
buddy2<-t(rbind(buddy,c(rep("Avon",3),rep("Bing",3),rep("WWR",3),rep("PB",3)),rep(c("slope","Tm","min"),4)))
buddy2
data.frame(buddy2)
buddy2<-data.frame(t(rbind(buddy,c(rep("Avon",3),rep("Bing",3),rep("WWR",3),rep("PB",3)),rep(c("slope","Tm","min"),4))))
buddy2
names(buddy2)<-c("measure","Colony","parameter")
buddy2
boxplot(measure~Colony*parameter,data=buddy2)
str(buddy2)
buddy2$measure<-as.numeric(as.character(buddy2$measure))
buddy2
boxplot(measure~Colony*parameter,data=buddy2)
sl<-subset(buddy2,buddy2$parameter=="slope")
boxplot(measure~Colony,data=sl)
barplot(measure~Colony,data=sl)
barplot(sl$measure)
?barplot
barplot(sl$measure,names.arg=sl$Colony)
barplot(sl$measure,names.arg=sl$Colony,ylab="slopes")
Tm<-subset(buddy2,buddy2$parameter=="Tm")
barplot(Tm$measure,names.arg=Tm$Colony,ylab="Tm")
barplot(Tm$measure,names.arg=Tm$Colony,ylab="Tm",ylim=c(40,44))
Tm
knitr::kable(Tm)
buddy2[order(buddy2$parameter,)]
buddy2[sort(buddy2$parameter,)]
buddy2
buddy2[sort(buddy2$parameter),]
buddy2.sorted<-buddy2[sort(buddy2$parameter),]
knitr::kable(buddy2)
buddy2.sorted<-buddy2[sort(buddy2$parameter),]
knitr::kable(buddy2)
knitr::kable(buddy2.sorted)
buddy2[sort(buddy2$parameter),]
buddy2
buddy2[sort(buddy2$parameter),]
buddy2
write.csv(buddy2,"prelim_param.csv")
library(ggplot2)
library(tidyr)
library(minpack.lm)
nls.fit<-function(data=data){
y<-nlsLM(unfolding ~ min+ (1-min)/(1+exp((-slope*(Tm-T)))),data=data, start=list(slope=.5,Tm=45,min=.3), trace=TRUE,control=nls.control(warnOnly = TRUE, tol = 1e-05, maxiter=1000))
return(coef(y))
}
T<-seq(25,70,5)
T
T<-c(25,30,35,40,43,45,48,50,55,60,65,70)
ten<-c(1.00,0.984,0.974,0.795,0.787,0.726,0.640,0.574,0.482,0.379,0.387,0.392)
twen<-c(0.977,0.988,1.00,0.822,0.664,0.564,0.479,0.473,0.432,0.350,0.315,0.304)
ten.dat<-as.data.frame(cbind(T,ten))
ten.dat
ten.dat<-as.data.frame(cbind(T,ten));names(ten.dat)[2]<-"unfolding"
ty.dat<-as.data.frame(cbind(T,twen));names(ty.dat)[2]<-"unfolding"
ty.dat
nls.fit(ten.dat)
nls.fit(ty.dat)
a<-nls.fit(ten.dat)
bnls.fit(ty.dat)
b<-nls.fit(ty.dat)
c(a,b)
rbind(a,b)
unfold_10min<-nls.fit(ten.dat)
unfold_20min<-nls.fit(ty.dat)
rbind(unfold_10min,unfold_20min)
knitr::kable(rbind(unfold_10min,unfold_20min))
knitr::kable(round(rbind(unfold_10min,unfold_20min),3))
nls.fit(ty.dat)
nls.fit<-function(data=data){
y<-nlsLM(unfolding ~ min+ (1-min)/(1+exp((-slope*(Tm-T)))),data=data, start=list(slope=.5,Tm=45,min=.3), trace=TRUE,control=nls.control(warnOnly = TRUE, tol = 1e-05, maxiter=1000))
#return(coef(y))
return(y)
}
ten.dat<-as.data.frame(cbind(T,ten));names(ten.dat)[2]<-"unfolding"
unfold_10min<-nls.fit(ten.dat)
nls.fit(ten.dat)
summary(nls.fit(ten.dat))
str(summary(nls.fit(ten.dat)))
summary(nls.fit(ten.dat))coefficients
summary(nls.fit(ten.dat))$coefficients
nls.fit<-function(data=data){
y<-nlsLM(unfolding ~ min+ (1-min)/(1+exp((-slope*(Tm-T)))),data=data, start=list(slope=.5,Tm=45,min=.3), trace=TRUE,control=nls.control(warnOnly = TRUE, tol = 1e-05, maxiter=1000))
#return(coef(y))
return(summary(nls.fit(y))$coefficients)
}
unfold_10min<-nls.fit(ten.dat)
ty.dat<-as.data.frame(cbind(T,twen));names(ty.dat)[2]<-"unfolding"
unfold_20min<-nls.fit(ty.dat)
knitr::kable(round(rbind(unfold_10min,unfold_20min),3))
unfold_10min<-nls.fit(ten.dat)
nls.fit<-function(data=data){
y<-nlsLM(unfolding ~ min+ (1-min)/(1+exp((-slope*(Tm-T)))),data=data, start=list(slope=.5,Tm=45,min=.3), trace=TRUE,control=nls.control(warnOnly = TRUE, tol = 1e-05, maxiter=1000))
#return(coef(y))
return(summary(nls.fit(y))$coefficients)
}
summary(nls.fit(ten.dat))$coefficients
summary(nls.fit(ten.dat))
ten.dat
nls.fit(ten.dat)
nls.fit<-function(data=data){
y<-nlsLM(unfolding ~ min+ (1-min)/(1+exp((-slope*(Tm-T)))),data=data, start=list(slope=.5,Tm=45,min=.3), trace=TRUE,control=nls.control(warnOnly = TRUE, tol = 1e-05, maxiter=1000))
return(coef(y))
#return(summary(nls.fit(y))$coefficients)
}
nls.fit(ten.dat)
summary(nls.fit(ten.dat))
nls.fit(ten.dat)$coefficients
nls.fit(ten.dat)
summary(nls.fit(ten.dat))
str(summary(nls.fit(ten.dat)))
nls.fit<-function(data=data){
y<-nlsLM(unfolding ~ min+ (1-min)/(1+exp((-slope*(Tm-T)))),data=data, start=list(slope=.5,Tm=45,min=.3), trace=TRUE,control=nls.control(warnOnly = TRUE, tol = 1e-05, maxiter=1000))
return(coef(y))
#return(summary(nls.fit(y))$coefficients)
}
summary(nls.fit(ten.dat))
nls.fit(ten.dat)
nls.fit<-function(data=data){
y<-nlsLM(unfolding ~ min+ (1-min)/(1+exp((-slope*(Tm-T)))),data=data, start=list(slope=.5,Tm=45,min=.3), trace=TRUE,control=nls.control(warnOnly = TRUE, tol = 1e-05, maxiter=1000))
#return(coef(y))
return(summary(nls.fit(y)))
}
ten.dat<-as.data.frame(cbind(T,ten));names(ten.dat)[2]<-"unfolding"
unfold_10min<-nls.fit(ten.dat)
nls.fit<-function(data=data){
y<-nlsLM(unfolding ~ min+ (1-min)/(1+exp((-slope*(Tm-T)))),data=data, start=list(slope=.5,Tm=45,min=.3), trace=TRUE,control=nls.control(warnOnly = TRUE, tol = 1e-05, maxiter=1000))
return(coef(y))
#return(summary(nls.fit(y)))
}
nls.fit(ten.dat)
summary(nls.fit(ten.dat))
library(ggplot2)
library(tidyr)
library(minpack.lm)
nls.fit<-function(data=data){
y<-nlsLM(unfolding ~ min+ (1-min)/(1+exp((-slope*(Tm-T)))),data=data, start=list(slope=.5,Tm=45,min=.3), trace=TRUE,control=nls.control(warnOnly = TRUE, tol = 1e-05, maxiter=1000))
return(coef(y))
#return(summary(nls.fit(y)))
}
knitr::kable(round(rbind(unfold_10min,unfold_20min),3))
nls.fit(ten.dat)
summary(nls.fit(ten.dat))
?summary
library(ggplot2)
library(tidyr)
library(minpack.lm)
nls.fit<-function(data=data){
y<-nlsLM(unfolding ~ min+ (1-min)/(1+exp((-slope*(Tm-T)))),data=data, start=list(slope=.5,Tm=45,min=.3), trace=TRUE,control=nls.control(warnOnly = TRUE, tol = 1e-05, maxiter=1000))
return(coef(y))
#return(summary(nls.fit(y)))
}
T<-c(25,30,35,40,43,45,48,50,55,60,65,70)
ten<-c(1.00,0.984,0.974,0.795,0.787,0.726,0.640,0.574,0.482,0.379,0.387,0.392)
twen<-c(0.977,0.988,1.00,0.822,0.664,0.564,0.479,0.473,0.432,0.350,0.315,0.304)
ten.dat<-as.data.frame(cbind(T,ten));names(ten.dat)[2]<-"unfolding"
unfold_10min<-nls.fit(ten.dat)
ty.dat<-as.data.frame(cbind(T,twen));names(ty.dat)[2]<-"unfolding"
unfold_20min<-nls.fit(ty.dat)
knitr::kable(round(rbind(unfold_10min,unfold_20min),3))
summary(nls.fit(ten.dat))
str(nls.fit(ten.dat))
a<-nls.fit(ten.dat)
str(a)
nls.fit<-function(data=data){
y<-nlsLM(unfolding ~ min+ (1-min)/(1+exp((-slope*(Tm-T)))),data=data, start=list(slope=.5,Tm=45,min=.3), trace=TRUE,control=nls.control(warnOnly = TRUE, tol = 1e-05, maxiter=1000))
return(y)
#return(summary(nls.fit(y)))
}
str(a)
unfold_10min<-nls.fit(ten.dat)
str(a)
nls.fit(ty.dat)
a<-nls.fit(ten.dat)
str(a)
a<-summary(nls.fit(ten.dat))
source('~/.active-rstudio-document', echo=TRUE)
str(a)
a
a<-summary(nls.fit(ten.dat))$coefficients
str(a)
a
nls.fit<-function(data=data){
y<-nlsLM(unfolding ~ min+ (1-min)/(1+exp((-slope*(Tm-T)))),data=data, start=list(slope=.5,Tm=45,min=.3), trace=TRUE,control=nls.control(warnOnly = TRUE, tol = 1e-05, maxiter=1000))
#return(y)
return(summary(y)$coefficients)
}
ten.dat<-as.data.frame(cbind(T,ten));names(ten.dat)[2]<-"unfolding"
unfold_10min<-nls.fit(ten.dat)
ty.dat<-as.data.frame(cbind(T,twen));names(ty.dat)[2]<-"unfolding"
unfold_20min<-nls.fit(ty.dat)
knitr::kable(round(rbind(unfold_10min,unfold_20min),3))
unfold_20min<-nls.fit(ty.dat);unfold_20min
fud<-function(T=seq(25,50,1),Tm=40,slope=.5,max=1,min=0){
y<-min+ (max-min)/(1+exp((-slope*(Tm-T))))
return(y)
}
fud<-function(T=seq(25,50,1),Tm=40,slope=.5,max=1,min=0){
y<-min+ (max-min)/(1+exp((-slope*(Tm-T))))
return(y)
}
plot(seq(25,50,1),fud(max=1,min=0),pch=15,col="black")
unfold_20min<-nls.fit(ty.dat);unfold_20min
plot(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3452337,Tm=43.2788185,slope=0.2824321),pch=15,col="red")
plot(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3452337,Tm=43.2788185,slope=0.2824321),pch=15,col="red",ylab="Proportion non-denatured",ylab="Tempearture")
unfold_10min<-nls.fit(ten.dat)
unfold_10min
points(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3704093,Tm=46.159662,slope=0.1923073))
plot(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3452337,Tm=43.2788185,slope=0.2824321),pch=15,col="red",ylab="Proportion non-denatured",ylab="Tempearture")
plot(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3452337,Tm=43.2788185,slope=0.2824321),pch=15,col="red",ylab="Proportion non-denatured",xlab="Tempearture")
points(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3704093,Tm=46.159662,slope=0.1923073))
plot(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3452337,Tm=43.2788185,slope=0.2824321),pch=15,col="red",ylab="Proportion non-denatured",xlab="Temperature")
points(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3704093,Tm=46.159662,slope=0.1923073))
unfold_20min
abline(v=c(46.1596629,43.2788185))
abline(v=c(46.1596629,43.2788185),h=c(.5,.5))
abline(v=c(46.1596629,43.2788185))
plot(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3452337,Tm=43.2788185,slope=0.2824321),pch=15,col="red",ylab="Proportion non-denatured",xlab="Temperature")
points(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3704093,Tm=46.159662,slope=0.1923073))
abline(v=c(46.1596629,43.2788185))
abline(v=c(46.1596629,43.2788185),lty=c(1,3))
plot(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3452337,Tm=43.2788185,slope=0.2824321),pch=15,col="red",ylab="Proportion non-denatured",xlab="Temperature")
points(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3704093,Tm=46.159662,slope=0.1923073))
abline(v=c(46.1596629,43.2788185),lty=c(1,3))
plot(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3452337,Tm=43.2788185,slope=0.2824321),pch=15,col="red",ylab="Proportion non-denatured",xlab="Temperature")
points(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3704093,Tm=46.159662,slope=0.1923073))
abline(v=c(46.1596629,43.2788185),lty=c(1,3),lwd=3)
plot(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3452337,Tm=43.2788185,slope=0.2824321),pch=16,col="red",ylab="Proportion non-denatured",xlab="Temperature")
points(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3704093,Tm=46.159662,slope=0.1923073))
points(ten.dat$T,ten.dat$unfolding,pch=16,col="black")
plot(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3452337,Tm=43.2788185,slope=0.2824321),pch=16,col="red",ylab="Proportion non-denatured",xlab="Temperature")
points(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3704093,Tm=46.159662,slope=0.1923073),pch=16,col="black")
points(ten.dat$T,ten.dat$unfolding,pch=16,col="black")
points(ty.dat$T,ty.dat$unfolding,pch=16,col="red")
points(ty.dat$T,ty.dat$unfolding,pch=16,col="red",cex=2)
plot(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3452337,Tm=43.2788185,slope=0.2824321),pch=16,col="red",ylab="Proportion non-denatured",xlab="Temperature",ylim=c(.3,1))
points(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3704093,Tm=46.159662,slope=0.1923073),pch=16,col="black")
points(ten.dat$T,ten.dat$unfolding,pch=16,col="black")
points(ty.dat$T,ty.dat$unfolding,pch=16,col="red",cex=2)
plot(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3452337,Tm=43.2788185,slope=0.2824321),pch=16,col="red",ylab="Proportion non-denatured",xlab="Temperature",ylim=c(.3,1))
points(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3704093,Tm=46.159662,slope=0.1923073),pch=16,col="black")
points(ten.dat$T,ten.dat$unfolding,pch=16,col="black",cex=2)
points(ty.dat$T,ty.dat$unfolding,pch=16,col="red",cex=2)
abline(v=c(46.1596629,43.2788185),lty=c(1,3),lwd=3)
T<-c(25,30,35,40,43,45,48,50,55,60,65,70)
avon<-c(1.00,0.940,0.882,0.755,0.627,0.600,0.549,0.502,0.444,0.368,0.379)
avon<-c(1.00,0.940,0.882,0.755,0.627,0.600,0.549,0.502,0.444,0.368,0.379)
aph<-as.data.frame(cbind(T,avon));names(aph)[2]<-"unfolding"
cbind(T,avon)
avon<-c(0.963,1.00,0.940,0.882,0.755,0.627,0.600,0.549,0.502,0.444,0.368,0.379)
aph<-as.data.frame(cbind(T,avon));names(aph)[2]<-"unfolding"
aph
knitr::kable(round(rbind(ten.dat,aph),3))
aph.fit<-nls.fit(aph)
knitr::kable(round(rbind(ten.dat,aph.fit),3))
aph.fit
ten.dat
knitr::kable(round(rbind(unfold_10min,aph.fit),3))
unfold_10min
aph.fit
knitr::kable(round(rbind(unfold_10min,aph.fit),3))
46.16-44.754
plot(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3452337,Tm=43.2788185,slope=0.2824321),pch=16,col="red",ylab="Proportion non-denatured",xlab="Temperature",ylim=c(.3,1))
points(ten.dat$T,ten.dat$unfolding,pch=16,col="red",cex=2)
points(aph$T,aph$unfolding,pch=16,col="blue",cex=2)
aph.fit
plot(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3958177,Tm=44.7544257,slope=0.2156598),pch=16,col="red",ylab="Proportion non-denatured",xlab="Temperature",ylim=c(.3,1))
ten.fit
unfold_10min
plot(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3958177,Tm=44.7544257,slope=0.2156598),pch=16,col="red",ylab="Proportion non-denatured",xlab="Temperature",ylim=c(.3,1))
points(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3704093,Tm=46.159662,slope=0.1923073),pch=16,col="blue")
points(ten.dat$T,ten.dat$unfolding,pch=16,col="red",cex=2)
points(aph$T,aph$unfolding,pch=16,col="blue",cex=2)
plot(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3958177,Tm=44.7544257,slope=0.2156598),pch=16,col="red",ylab="Proportion non-denatured",xlab="Temperature",ylim=c(.3,1))
points(ten.dat$T,ten.dat$unfolding,pch=16,col="red",cex=2)
points(aph$T,aph$unfolding,pch=16,col="blue",cex=2)
points(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3704093,Tm=46.159662,slope=0.1923073),pch=16,col="blue")
plot(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3958177,Tm=44.7544257,slope=0.2156598),pch=16,col="blue",ylab="Proportion non-denatured",xlab="Temperature",ylim=c(.3,1))
points(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3704093,Tm=46.159662,slope=0.1923073),pch=16,col="red")
points(ten.dat$T,ten.dat$unfolding,pch=16,col="red",cex=2)
points(aph$T,aph$unfolding,pch=16,col="blue",cex=2)
abline(v=c(46.1596629,44.7544257),lty=c(1,3),lwd=3)
plot(seq(25,70,1),fud(T=seq(25,70,1)))
plot(seq(25,70,1),fud(T=seq(25,70,1)),pch=16,col="black")
points(seq(25,70,1),fud(T=seq(25,70,1),slope=1),pch=16,col="red")
knitr::kable(round(rbind(unfold_10min,aph.fit),3))
plot(seq(25,70,1),fud(T=seq(25,70,1),slope= 0.192,Tm=45),pch=16,col="blue")
points(seq(25,70,1),fud(T=seq(25,70,1),slope= 0.216,Tm=45),pch=16,col="red")
plot(seq(25,70,1),fud(T=seq(25,70,1),slope= 0.192,Tm=45),pch=16,col="blue",ylab="Proportion non-denatured",xlab="Temperature")
points(seq(25,70,1),fud(T=seq(25,70,1),slope= 0.216,Tm=45),pch=16,col="red")
plot(seq(25,70,.1),fud(T=seq(25,70,.1),slope= 0.192,Tm=45),pch=16,col="blue",ylab="Proportion non-denatured",xlab="Temperature")
points(seq(25,70,.1),fud(T=seq(25,70,.1),slope= 0.216,Tm=45),pch=16,col="red")
plot(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3958177,Tm=44.7544257,slope=0.2156598),pch=16,col="blue",ylab="Proportion non-denatured",xlab="Temperature",ylim=c(.3,1))
points(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3704093,Tm=46.159662,slope=0.1923073),pch=16,col="red")
points(ten.dat$T,ten.dat$unfolding,pch=16,col="red",cex=2)
points(aph$T,aph$unfolding,pch=16,col="blue",cex=2)
legend(60,1,c("Pogonomyrmex barbatus","Aphaenogaster picea")font=2,pch=16,col=c("red","blue"))
legend(60,1,c("Pogonomyrmex barbatus","Aphaenogaster picea"),font=2,pch=16,col=c("red","blue"))
?legend
legend(60,1,c("Pogonomyrmex barbatus","Aphaenogaster picea"),text.font=2,pch=16,col=c("red","blue"))
legend(60,1,c("Pogonomyrmex barbatus","Aphaenogaster picea"),text.font=3,pch=16,col=c("red","blue"))
legend(55,1,c("Pogonomyrmex barbatus","Aphaenogaster picea"),text.font=3,pch=16,col=c("red","blue"))
plot(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3958177,Tm=44.7544257,slope=0.2156598),pch=16,col="blue",ylab="Proportion non-denatured",xlab="Temperature",ylim=c(.3,1))
points(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3704093,Tm=46.159662,slope=0.1923073),pch=16,col="red")
points(ten.dat$T,ten.dat$unfolding,pch=16,col="red",cex=2)
points(aph$T,aph$unfolding,pch=16,col="blue",cex=2)
legend(55,1,c("Pogonomyrmex barbatus","Aphaenogaster picea"),text.font=3,pch=16,col=c("red","blue"))
#abline(v=c(46.1596629,44.7544257),lty=c(1,3),lwd=3)
plot(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3452337,Tm=43.2788185,slope=0.2824321),pch=16,col="red",ylab="Proportion non-denatured",xlab="Temperature",ylim=c(.3,1))
points(seq(25,70,.1),fud(T=seq(25,70,.1),max=1,min=0.3704093,Tm=46.159662,slope=0.1923073),pch=16,col="black")
points(ten.dat$T,ten.dat$unfolding,pch=16,col="black",cex=2)
points(ty.dat$T,ty.dat$unfolding,pch=16,col="red",cex=2)
abline(v=c(46.1596629,43.2788185),lty=c(1,3),lwd=3)
legend(55,1,c("10 minute","20 minute"),pch=16,col=c("black","red"))
plot(seq(25,70,.1),fud(T=seq(25,70,.1),slope= 0.192,Tm=45),pch=16,col="blue",ylab="Proportion non-denatured",xlab="Temperature")
points(seq(25,70,.1),fud(T=seq(25,70,.1),slope= 0.216,Tm=45),pch=16,col="red")
legend(55,1,c("Pogonomyrmex barbatus","Aphaenogaster picea"),text.font=3,pch=16,col=c("red","blue"))
knitr::kable(round(rbind(unfold_10min,aph.fit),3))
knitr::kable(round(cbind(unfold_10min,aph.fit),3))
.192+.021
.37+.021
.396-.024
.192-.282
.192+.021
.282-.043
46.16-43.279
.021+.37
.021-.37
.345+.021
