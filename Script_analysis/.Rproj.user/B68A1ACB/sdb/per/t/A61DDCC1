{
    "contents" : "---\ntitle: \"Thermal unfolding\"\nauthor: \"Andrew Nguyen\"\ndate: \"2016-March-11\"\noutput: pdf_document\n---\n```{r libraries}\nlibrary(ggplot2)\n```\n\n#Model Unfolding curve: Negative logistic function\n###function\n\n1/(1+exp(-(-1*x)))\n```{r unfolding function}\nfud<-function(T=seq(25,50,1),Tm=40,slope=.5){\n  y<-1/(1+exp((-slope*(Tm-T))))\n  return(y)\n  }\nplot(seq(25,50,1),fud(),pch=15,col=\"black\")\npoints(seq(25,50,1),fud(slope=1),pch=16,col=\"red\")\npoints(seq(25,50,1),fud(slope=.25),pch=16,col=\"blue\")\n\n\n#Converting C to Kelvin, add 273.15\ndeltaHm<-(40+273.15)*1\nTm<-40\n\nya<-c(98.1)\n```\n\n#old data\n```{r}\nold<-read.csv(\"Old_folding_data.csv\")\nplot(old)\nold$K<-old$Tc+273.15\nold$unfold<-1-(old$ya/max(old$ya))\nplot(old$Tc,old$unfold)\n\n\n#fitting my new function!\nneg.fit<-nls(unfold~1/(1+exp((-slope*(Tm-Tc)))),data=old,start=list(slope=.5,Tm=45),trace=TRUE,control=nls.control(warnOnly\n= TRUE, tol = 1e-05, maxiter=1000))\nsummary(neg.fit)\n\ndeltaHm<-(47.25+273.15)*0.38065\n\npred<-predict(neg.fit,type=\"response\")\nplot(old$Tc,old$unfold,ylim=c(0,1))\nlines(old$Tc,pred)\n\n```\n\n#estimating gibbs free energy\n### using this equation\n```{r estimating gibbs free}\n#Delta G = DeltaHm ( 1- T/Tm) - DeltaCp(Tm-T + T*Ln(T/Tm))\n\n#assuming no DeltaCP\nDeltaG_1<-function(Hm=deltaHm,T=seq(25,50,1),Tm=35){\n  G<-Hm*(1-(T/Tm))\n  plot(T,G,pch=16)\n  abline(h=0,lty=\"dotdash\")\n  }\nDeltaG_1()\n\n\n#together\nDeltaG_2<-function(Cp=2,Hm=deltaHm,T=(seq(0,60,.1)+273.15),Tm=35+273.15){\n  G<-Hm*(1-(T/Tm))-(Cp*((Tm-T)+T*log(T/Tm)))\n  #plot(T,G,pch=16,ylab=\"Gibbs Free of Unfolding\",xlab=\"Temperature in Kelvins\")\n  #abline(h=0,lty=\"dotdash\")\n  return(G)\n  #dat<-as.data.frame(cbind(T,G))\n  #return(dat)\n  #Tms<-(subset(dat,dat$G==\"0\"))[1]-273.15\n  #return(Tms)\n  }\n#par(mfrow=c(1,1))\nTemp<-seq(0,60,.1)\nplot(Temp,DeltaG_2(Cp=0),ylim=c(-10,10),xlim=c(0,60),ylab=expression(paste(Delta,G,\" of unfolding (Kcal/mole)\")),main=expression(paste(Delta,G,\" = \",Delta,H[m],(1-frac(T,T[m])),\" - \",Delta,C[p],(T[m]-T+T%*%Ln(frac(T,T[m]))))))\nabline(h=0,lty=\"dotdash\")\npoints(Temp,DeltaG_2(Cp=5),col=\"purple\",pch=16)\npoints(Temp,DeltaG_2(Cp=10),col=\"blue\",pch=17)\npoints(Temp,DeltaG_2(Cp=100),col=\"red\",pch=17)\nlegend(40,10,c(\"0\",\"5\",\"10\",\"100\"),pch=16,col=c(\"black\",\"purple\",\"blue\",\"red\"),title=\"Heat Capacity\",box.col=\"white\")\n\n#comparing our model to pace et al. ch 13\nplot(Temp,DeltaG_2(Cp=1.1,Hm=96.6,Tm=(48.3+273)),ylab=\"Delta G of unfolding\",main=\"Pace et al. Ch13, Gibbs = 5.9, Tm=48.3,Cp = 1.1\")\npoints(25,6,pch=16,cex=2,col=\"red\")\ntext(35,6,label=\"Our model estimate :-)\")\n\n#playing with enthalpy\n#Delta G = DeltaHm ( 1- T/Tm) - DeltaCp(Tm-T + T*Ln(T/Tm))\nplot(Temp,DeltaG_2(Cp=5,Hm=100),ylim=c(-10,10),xlim=c(0,60),ylab=expression(paste(Delta,G,\" of unfolding (Kcal/mole)\")),main=expression(paste(Delta,G,\" = \",Delta,H[m],(1-frac(T,T[m])),\" - \",Delta,C[p],(T[m]-T+T%*%Ln(frac(T,T[m]))))))\nabline(h=0,lty=\"dotdash\")\npoints(Temp,DeltaG_2(Cp=5,Hm=200),col=\"purple\",pch=16)\npoints(Temp,DeltaG_2(Cp=5,Hm=300),col=\"blue\",pch=17)\npoints(Temp,DeltaG_2(Cp=5,Hm=50),col=\"red\",pch=17)\nlegend(40,10,c(\"100\",\"200\",\"300\",\"50\"),pch=16,col=c(\"black\",\"purple\",\"blue\",\"red\"),title=\"Enthalpy\",box.col=\"white\")\n```\n\n#messing around\n```{r}\n#first derivitive\nderiv<-function(a=0.38065,Tm=(35+273),T=(seq(0,60,.1)+273)){\n  first<-(a*exp(a*(Tm-T)))/((exp(a*(Tm-T))+1)^2)\n  second<-((a^2)*(exp(a*(Tm-T))-1)*(exp(a*(Tm-T))))/(exp(a*(Tm-T))+1)^3\n  dat<-data.frame(cbind(first,second))\n  return(dat)\n}\n\nderiv()\nplot(seq(0,60,.1),deriv()[,1],ylim=c(-.02,.1))\npoints(seq(0,60,.1),deriv()[,2],col=\"blue\")\nmax(deriv()[,1])\n\n\n#te<-DeltaG_2(Cp=deriv()[,2],Hm=deriv()[,1])\n#plot(seq(25,60,.1),te)\n#abline(h=0,lty=\"dotdash\")\n\ntest2<-DeltaG_2(Cp=deriv()[,2],T=(seq(0,60,.1)+273))\nplot(seq(0,60,.1),test2)\nabline(h=0,lty=\"dotdash\")\n\ncbind(seq(0,60,.1),test2)[251,] #gibbs free estimate\n\ncalc_cp<-function(Hm=deltaHm,Temp=(seq(0,60,.1)+273),Tm=(48.3+273)){\n  calc<-(Hm*2*Temp)/(Tm*(Tm-Temp))\n  return(calc)\n}\nplot(seq(0,60,.1),calc_cp())\n\n```\n\n\n#van't hoff's approach\n```{r van't hoff}\nold\n\n#vant<-function(Tm=35,T=seq(25,60,1))\n  \n#looking at linear region of points\nold$Keq<-log(old$ya/max(old$ya))\n#plot((1/old$K),old$Keq,xlim=c(0.003,0.0032))\n#text((1/old$K),old$Keq,labels=old$Tc)\nold$Temperature_K<-1/old$K\n#subsetting linear part of equation\nnew<-subset(old,old$Tc > 45 & old$Tc <52)\n\nmod1<-lm(Keq~Temperature_K,data=new)\nsummary(mod1)\n\n\nplot(new$Temperature_K,new$Keq,main=\"van't Hoff plot\")\nabline(mod1)\n#http://www.science.uwaterloo.ca/~cchieh/cact/c120/idealgas.html\nparam<-coef(mod1)/.001987\nnames(param)<-c(\"Entropy\",\"Enthalpy\");param\nG_estimate<-function(Entropy=param[1],Enthalpy=param[2],Temp=(seq(-60,60,.1)+273.15)){\n  gibbs<-(Enthalpy)-(Temp*Entropy)\n  return(gibbs)\n}\nG_estimate()\nplot(seq(-60,60,.1),G_estimate())\n```\n\n#break point analysis\n```{r}\nlibrary(segmented)\nlibrary(ggplot2)\nm<-read.csv(\"20160311_prot_unfolding.csv\")\nstr(m)\n\np<-ggplot(m,aes(y=Conc,x=Temp,colour=Species,shape=Treatment))+geom_point(size=3)\np\n\n#pic\npic<-subset(m,m$Species==\"A. picea\")\np1<-ggplot(pic,aes(y=Conc,x=Temp,colour=Treatment))+geom_point(size=3)\np1\n#pogo\npog<-subset(m,m$Species==\"P. barbatus\")\np2<-ggplot(pog,aes(y=Conc,x=Temp,colour=Treatment))+geom_point(size=3)\np2\n\n#break point analysis for aphaeno\napic.mod1<-lm(Conc~Temp,data=subset(pic,pic$Treatment==\"Native\"))\nsummary(apic.mod1)\n\napic.seg1<-segmented(apic.mod1,seg.Z=~Temp,psi=list(Temp=c(30)))\nsummary(apic.seg1)\napic.seg1$psi#break point estimates\nslope(apic.seg1)#getting slopes\n\n\n#break point analysis for pogo\npog.mod1<-lm(Conc~Temp,data=subset(pog,pog$Treatment==\"Native\"))\nsummary(pog.mod1)\n\npog.seg1<-segmented(pog.mod1,seg.Z=~Temp,psi=list(Temp=c(30)))\nsummary(pog.seg1)\npog.seg1$psi#break point estimates\nslope(pog.seg1)#getting slopes\n\nplot(pog$Temp,pog$Conc,pch=16,cex=2)\nabline(a=1,b=0.0002672)\nabline(a=1,b=-0.0420500)\n\n```\n\n#new function\n```{r new function}\nDeltaG_3<-function(Cp=5,T=(seq(-60,60,.1)+273.15),Tm=35+273.15,slope=.3){\n  G<-(slope*Tm)*(1-(T/Tm))-(Cp*((Tm-T)+T*log(T/Tm)))\n  return(G)\n\n  }\nDeltaG_3()\nplot(seq(-60,60,.1),DeltaG_3(),ylim=c(-20,20),xlim=c(-60,60),ylab=expression(paste(Delta,G,\" of unfolding (Kcal/mole)\")),main=expression(paste(Delta,G,\" = \",Delta,H[m],(1-frac(T,T[m])),\" - \",Delta,C[p],(T[m]-T+T%*%Ln(frac(T,T[m]))))))\nabline(h=0,v=25,lty=\"dotdash\")\npoints(seq(-60,60,.1),DeltaG_3(Tm=25+273.15))\npoints(seq(-60,60,.1),DeltaG_3(Tm=60+273.15))\npoints(seq(-60,60,.1),DeltaG_3(Tm=60+273.15,slope=.4),col=\"red\")\n```\n\n",
    "created" : 1458233953086.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1696901147",
    "id" : "A61DDCC1",
    "lastKnownWriteTime" : 1458154296,
    "path" : "~/zscience/Dimensions_project/Data/2016_Evo_of_Protein_stability/Script_analysis/20160311_Playing_with_Gibbs_free_energy.Rmd",
    "project_path" : "20160311_Playing_with_Gibbs_free_energy.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}